{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Toan\\\\Desktop\\\\reactjs\\\\src\\\\TodoForm.js\",\n    _s2 = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoForm = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [text, setText] = useState(\"\");\n  const [isPending, setIsPending] = useState(false);\n\n  const handleChange = e => {\n    setText(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    _s();\n\n    e.preventDefault();\n    const todo = {\n      text\n    };\n    const {\n      id\n    } = useParams();\n    setIsPending(true);\n    fetch(\"http://localhost:8000/todolist\" + id, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(todo)\n    }).then(() => {\n      setIsPending(false);\n    });\n  };\n\n  _s(handleSubmit, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n    return [useParams];\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"What need to be done?\",\n      name: \"text\",\n      onChange: handleChange,\n      required: true,\n      value: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), !isPending && /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 22\n    }, this), isPending && /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: true,\n      children: \"Adding...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(TodoForm, \"XGnL+MaKZlGsXxWDqxv+fOR+KoU=\");\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["C:/Users/Toan/Desktop/reactjs/src/TodoForm.js"],"names":["useState","useParams","TodoForm","text","setText","isPending","setIsPending","handleChange","e","target","value","handleSubmit","preventDefault","todo","id","fetch","method","headers","body","JSON","stringify","then"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAAA;;AACrB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMO,YAAY,GAAIC,CAAD,IAAO;AAC1BJ,IAAAA,OAAO,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAIH,CAAD,IAAO;AAAA;;AAC1BA,IAAAA,CAAC,CAACI,cAAF;AACA,UAAMC,IAAI,GAAG;AAAEV,MAAAA;AAAF,KAAb;AACA,UAAM;AAAEW,MAAAA;AAAF,QAASb,SAAS,EAAxB;AACAK,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAS,IAAAA,KAAK,CAAC,mCAAmCD,EAApC,EAAwC;AAC3CE,MAAAA,MAAM,EAAE,MADmC;AAE3CC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFkC;AAG3CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,IAAf;AAHqC,KAAxC,CAAL,CAIGQ,IAJH,CAIQ,MAAM;AACZf,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAND;AAOD,GAZD;;AARqB,KAQfK,YARe;AAAA,YAWJV,SAXI;AAAA;;AAsBrB,sBACE;AAAM,IAAA,QAAQ,EAAEU,YAAhB;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,uBAFd;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,QAAQ,EAAEJ,YAJZ;AAKE,MAAA,QAAQ,MALV;AAME,MAAA,KAAK,EAAEJ;AANT;AAAA;AAAA;AAAA;AAAA,YADF,EASG,CAACE,SAAD,iBAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATjB,EAUGA,SAAS,iBAAI;AAAQ,MAAA,QAAQ,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVhB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CApCD;;IAAMH,Q;;KAAAA,Q;AAsCN,eAAeA,QAAf","sourcesContent":["import { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst TodoForm = () => {\r\n  const [text, setText] = useState(\"\");\r\n  const [isPending, setIsPending] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    setText(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const todo = { text };\r\n    const { id } = useParams();\r\n    setIsPending(true);\r\n    fetch(\"http://localhost:8000/todolist\" + id, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(todo),\r\n    }).then(() => {\r\n      setIsPending(false);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"What need to be done?\"\r\n        name=\"text\"\r\n        onChange={handleChange}\r\n        required\r\n        value={text}\r\n      />\r\n      {!isPending && <button>Add Task</button>}\r\n      {isPending && <button disabled>Adding...</button>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TodoForm;\r\n"]},"metadata":{},"sourceType":"module"}