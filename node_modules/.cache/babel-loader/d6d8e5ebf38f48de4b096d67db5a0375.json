{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Toan\\\\Desktop\\\\reactjs\\\\src\\\\components\\\\Animation\\\\Box.js\";\nimport React, { useRef, useEffect } from \"react\";\nimport { useFrame } from \"react-three-fiber\";\nimport create from \"zustand\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Box = () => {\n  var _s = $RefreshSig$();\n\n  const BOX_COUNT = 120;\n  const boxIds = new Array(BOX_COUNT).fill().map((_, idx) => idx);\n  const boxIdsCoordinates = boxIds.reduce((acc, id) => ({ ...acc,\n    [id]: [Math.random() * Math.PI, Math.random() * Math.PI, Math.random() * Math.PI]\n  }), 0);\n  const useStore = create(set => ({\n    boxes: boxIds,\n    coordinates: boxIdsCoordinates,\n    mutate: () => {\n      set(state => {\n        const coordinates = {};\n\n        for (let i = 0; i < state.boxes.length; i++) {\n          const id = state.boxes[i];\n          const [x, y, z] = state.coordinates[id];\n          coordinates[id] = [x + 0.01, y + 0.01, z + 0.01];\n        }\n\n        return { ...state,\n          coordinates\n        };\n      });\n    }\n  }));\n\n  function Box({\n    id\n  }) {\n    _s();\n\n    const mesh = useRef();\n    const coordinates = useRef([0, 0, 0]);\n    useEffect(() => useStore.subscribe(xyz => coordinates.current = xyz, state => state.coordinates[id]));\n    useFrame(() => mesh.current && mesh.current.rotation.set(...coordinates.current));\n    return /*#__PURE__*/_jsxDEV(\"mesh\", {\n      ref: mesh,\n      children: [/*#__PURE__*/_jsxDEV(\"boxBufferGeometry\", {\n        args: [2, 2, 2],\n        attach: \"geometry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meshNormalMaterial\", {\n        attach: \"material\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n  _s(Box, \"BAfJuxofP5QYtznO6Yjzn/YrZoE=\", false, function () {\n    return [useFrame];\n  });\n};\n\n_c = Box;\nexport default Box;\n\nvar _c;\n\n$RefreshReg$(_c, \"Box\");","map":{"version":3,"sources":["C:/Users/Toan/Desktop/reactjs/src/components/Animation/Box.js"],"names":["React","useRef","useEffect","useFrame","create","Box","BOX_COUNT","boxIds","Array","fill","map","_","idx","boxIdsCoordinates","reduce","acc","id","Math","random","PI","useStore","set","boxes","coordinates","mutate","state","i","length","x","y","z","mesh","subscribe","xyz","current","rotation"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,OAAOC,MAAP,MAAmB,SAAnB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAMC,SAAS,GAAG,GAAlB;AAEA,QAAMC,MAAM,GAAG,IAAIC,KAAJ,CAAUF,SAAV,EAAqBG,IAArB,GAA4BC,GAA5B,CAAgC,CAACC,CAAD,EAAIC,GAAJ,KAAYA,GAA5C,CAAf;AACA,QAAMC,iBAAiB,GAAGN,MAAM,CAACO,MAAP,CACxB,CAACC,GAAD,EAAMC,EAAN,MAAc,EACZ,GAAGD,GADS;AAEZ,KAACC,EAAD,GAAM,CACJC,IAAI,CAACC,MAAL,KAAgBD,IAAI,CAACE,EADjB,EAEJF,IAAI,CAACC,MAAL,KAAgBD,IAAI,CAACE,EAFjB,EAGJF,IAAI,CAACC,MAAL,KAAgBD,IAAI,CAACE,EAHjB;AAFM,GAAd,CADwB,EASxB,CATwB,CAA1B;AAYA,QAAMC,QAAQ,GAAGhB,MAAM,CAAEiB,GAAD,KAAU;AAChCC,IAAAA,KAAK,EAAEf,MADyB;AAEhCgB,IAAAA,WAAW,EAAEV,iBAFmB;AAGhCW,IAAAA,MAAM,EAAE,MAAM;AACZH,MAAAA,GAAG,CAAEI,KAAD,IAAW;AACb,cAAMF,WAAW,GAAG,EAApB;;AACA,aAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACH,KAAN,CAAYK,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;AAC3C,gBAAMV,EAAE,GAAGS,KAAK,CAACH,KAAN,CAAYI,CAAZ,CAAX;AACA,gBAAM,CAACE,CAAD,EAAIC,CAAJ,EAAOC,CAAP,IAAYL,KAAK,CAACF,WAAN,CAAkBP,EAAlB,CAAlB;AACAO,UAAAA,WAAW,CAACP,EAAD,CAAX,GAAkB,CAACY,CAAC,GAAG,IAAL,EAAWC,CAAC,GAAG,IAAf,EAAqBC,CAAC,GAAG,IAAzB,CAAlB;AACD;;AACD,eAAO,EAAE,GAAGL,KAAL;AAAYF,UAAAA;AAAZ,SAAP;AACD,OARE,CAAH;AASD;AAb+B,GAAV,CAAD,CAAvB;;AAgBA,WAASlB,GAAT,CAAa;AAAEW,IAAAA;AAAF,GAAb,EAAqB;AAAA;;AACnB,UAAMe,IAAI,GAAG9B,MAAM,EAAnB;AACA,UAAMsB,WAAW,GAAGtB,MAAM,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAD,CAA1B;AACAC,IAAAA,SAAS,CAAC,MACRkB,QAAQ,CAACY,SAAT,CACGC,GAAD,IAAUV,WAAW,CAACW,OAAZ,GAAsBD,GADlC,EAEGR,KAAD,IAAWA,KAAK,CAACF,WAAN,CAAkBP,EAAlB,CAFb,CADO,CAAT;AAMAb,IAAAA,QAAQ,CACN,MAAM4B,IAAI,CAACG,OAAL,IAAgBH,IAAI,CAACG,OAAL,CAAaC,QAAb,CAAsBd,GAAtB,CAA0B,GAAGE,WAAW,CAACW,OAAzC,CADhB,CAAR;AAGA,wBACE;AAAM,MAAA,GAAG,EAAEH,IAAX;AAAA,8BACE;AAAmB,QAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAzB;AAAoC,QAAA,MAAM,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAoB,QAAA,MAAM,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAlDe,KAgCP1B,GAhCO;AAAA,YAyCdF,QAzCc;AAAA;AAmDjB,CAnDD;;KAAME,G;AAqDN,eAAeA,GAAf","sourcesContent":["import React, { useRef, useEffect } from \"react\";\r\nimport { useFrame } from \"react-three-fiber\";\r\nimport create from \"zustand\";\r\n\r\nconst Box = () => {\r\n  const BOX_COUNT = 120;\r\n\r\n  const boxIds = new Array(BOX_COUNT).fill().map((_, idx) => idx);\r\n  const boxIdsCoordinates = boxIds.reduce(\r\n    (acc, id) => ({\r\n      ...acc,\r\n      [id]: [\r\n        Math.random() * Math.PI,\r\n        Math.random() * Math.PI,\r\n        Math.random() * Math.PI,\r\n      ],\r\n    }),\r\n    0\r\n  );\r\n\r\n  const useStore = create((set) => ({\r\n    boxes: boxIds,\r\n    coordinates: boxIdsCoordinates,\r\n    mutate: () => {\r\n      set((state) => {\r\n        const coordinates = {};\r\n        for (let i = 0; i < state.boxes.length; i++) {\r\n          const id = state.boxes[i];\r\n          const [x, y, z] = state.coordinates[id];\r\n          coordinates[id] = [x + 0.01, y + 0.01, z + 0.01];\r\n        }\r\n        return { ...state, coordinates };\r\n      });\r\n    },\r\n  }));\r\n\r\n  function Box({ id }) {\r\n    const mesh = useRef();\r\n    const coordinates = useRef([0, 0, 0]);\r\n    useEffect(() =>\r\n      useStore.subscribe(\r\n        (xyz) => (coordinates.current = xyz),\r\n        (state) => state.coordinates[id]\r\n      )\r\n    );\r\n    useFrame(\r\n      () => mesh.current && mesh.current.rotation.set(...coordinates.current)\r\n    );\r\n    return (\r\n      <mesh ref={mesh}>\r\n        <boxBufferGeometry args={[2, 2, 2]} attach=\"geometry\" />\r\n        <meshNormalMaterial attach=\"material\" />\r\n      </mesh>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Box;\r\n"]},"metadata":{},"sourceType":"module"}