{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Toan\\\\Desktop\\\\reactjs\\\\src\\\\TodoList.js\",\n    _s = $RefreshSig$();\n\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoList = (todolist, title) => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const history = useHistory();\n  const {\n    data: todo,\n    error,\n    isPending\n  } = useFetch(\"http://localhost:8000/todolist/\" + id);\n\n  const handleDelete = () => {\n    fetch(\"http://localhost:8000/blogs/\" + blog.id, {\n      method: \"DELETE\"\n    }).then(() => {\n      history.push(\"/\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"What need to be done?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"OK\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), todolist.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: todo.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodoList, \"xSdfcyDDn8AG07nY4naeNYukFGI=\", true, function () {\n  return [useHistory];\n});\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["C:/Users/Toan/Desktop/reactjs/src/TodoList.js"],"names":["useHistory","TodoList","todolist","title","id","useParams","history","data","todo","error","isPending","useFetch","handleDelete","fetch","blog","method","then","push","map"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,kBAA3B;;;AAEA,MAAMC,QAAQ,GAAG,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAAA;;AACpC,QAAM;AAAEC,IAAAA;AAAF,MAASC,SAAS,EAAxB;AACA,QAAMC,OAAO,GAAGN,UAAU,EAA1B;AAEA,QAAM;AACJO,IAAAA,IAAI,EAAEC,IADF;AAEJC,IAAAA,KAFI;AAGJC,IAAAA;AAHI,MAIFC,QAAQ,CAAC,oCAAoCP,EAArC,CAJZ;;AAMA,QAAMQ,YAAY,GAAG,MAAM;AACzBC,IAAAA,KAAK,CAAC,iCAAiCC,IAAI,CAACV,EAAvC,EAA2C;AAC9CW,MAAAA,MAAM,EAAE;AADsC,KAA3C,CAAL,CAEGC,IAFH,CAEQ,MAAM;AACZV,MAAAA,OAAO,CAACW,IAAR,CAAa,GAAb;AACD,KAJD;AAKD,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,WAAW,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,EAKGf,QAAQ,CAACgB,GAAT,CAAcV,IAAD,iBACZ;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE;AAAA,kBAAIA,IAAI,CAACL;AAAT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADD,CALH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CA/BD;;GAAMF,Q;UAEYD,U;;;KAFZC,Q;AAiCN,eAAeA,QAAf","sourcesContent":["import { useHistory } from \"react-router-dom\";\r\n\r\nconst TodoList = (todolist, title) => {\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n\r\n  const {\r\n    data: todo,\r\n    error,\r\n    isPending,\r\n  } = useFetch(\"http://localhost:8000/todolist/\" + id);\r\n\r\n  const handleDelete = () => {\r\n    fetch(\"http://localhost:8000/blogs/\" + blog.id, {\r\n      method: \"DELETE\",\r\n    }).then(() => {\r\n      history.push(\"/\");\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"todo-list\">\r\n      <h2>Todo List</h2>\r\n      <input placeholder=\"What need to be done?\"></input>\r\n      <button>OK</button>\r\n\r\n      {todolist.map((todo) => (\r\n        <div className=\"todo-list\">\r\n          <p>{todo.title}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n"]},"metadata":{},"sourceType":"module"}