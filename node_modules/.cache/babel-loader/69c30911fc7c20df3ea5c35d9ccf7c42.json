{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Toan\\\\Desktop\\\\reactjs\\\\src\\\\TodoList.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Add = () => {\n  _s();\n\n  const [text, setText] = useState(\"\"); // const [isPending, setIsPending] = useState(false);\n};\n\n_s(Add, \"3t0DFnMi16eB/7p7iIKtjG5r68g=\");\n\n_c = Add;\n\nconst handleSubmit = e => {\n  const todo = {\n    text\n  }; // setPending(true);\n\n  fetch(\"http://localhost:8000/todolist\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(todo)\n  }).then(() => {// setIsPending(false);\n  });\n};\n\nconst TodoList = ({\n  todolist,\n  text\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"What need to be done?\",\n        onChange: e => {\n          setText(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), todolist.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-preview\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"checkbox\",\n        type: \"checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: todo.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, todo.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = TodoList;\nexport default TodoList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Add\");\n$RefreshReg$(_c2, \"TodoList\");","map":{"version":3,"sources":["C:/Users/Toan/Desktop/reactjs/src/TodoList.js"],"names":["useState","Add","text","setText","handleSubmit","e","todo","fetch","method","headers","body","JSON","stringify","then","TodoList","todolist","target","value","map","id"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,EAAD,CAAhC,CADgB,CAEhB;AACD,CAHD;;GAAMC,G;;KAAAA,G;;AAKN,MAAMG,YAAY,GAAIC,CAAD,IAAO;AAC1B,QAAMC,IAAI,GAAG;AAAEJ,IAAAA;AAAF,GAAb,CAD0B,CAE1B;;AACAK,EAAAA,KAAK,CAAC,gCAAD,EAAmC;AACtCC,IAAAA,MAAM,EAAE,MAD8B;AAEtCC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAF6B;AAGtCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf;AAHgC,GAAnC,CAAL,CAIGO,IAJH,CAIQ,MAAM,CACZ;AACD,GAND;AAOD,CAVD;;AAYA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYb,EAAAA;AAAZ,CAAD,KAAwB;AACvC,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAA,gBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAEE,YAAhB;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,uBAFd;AAGE,QAAA,QAAQ,EAAGC,CAAD,IAAO;AACfF,UAAAA,OAAO,CAACE,CAAC,CAACW,MAAF,CAASC,KAAV,CAAP;AACD;AALH;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAcGF,QAAQ,CAACG,GAAT,CAAcZ,IAAD,iBACZ;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAO,QAAA,SAAS,EAAC,UAAjB;AAA4B,QAAA,IAAI,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAIA,IAAI,CAACJ;AAAT;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,OAAmCI,IAAI,CAACa,EAAxC;AAAA;AAAA;AAAA;AAAA,YADD,CAdH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CAxBD;;MAAML,Q;AA0BN,eAAeA,QAAf","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst Add = () => {\r\n  const [text, setText] = useState(\"\");\r\n  // const [isPending, setIsPending] = useState(false);\r\n};\r\n\r\nconst handleSubmit = (e) => {\r\n  const todo = { text };\r\n  // setPending(true);\r\n  fetch(\"http://localhost:8000/todolist\", {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(todo),\r\n  }).then(() => {\r\n    // setIsPending(false);\r\n  });\r\n};\r\n\r\nconst TodoList = ({ todolist, text }) => {\r\n  return (\r\n    <div className=\"todo-list\">\r\n      <h2>{text}</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"What need to be done?\"\r\n          onChange={(e) => {\r\n            setText(e.target.value);\r\n          }}\r\n        />\r\n        {/* {!isPending && <button>Add Task</button>} */}\r\n        {/* {isPending && <button disabled>Adding Todo...</button>} */}\r\n        <button>Add Task</button>\r\n      </form>\r\n      {todolist.map((todo) => (\r\n        <div className=\"todo-preview\" key={todo.id}>\r\n          <input className=\"checkbox\" type=\"checkbox\" />\r\n          <p>{todo.text}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n"]},"metadata":{},"sourceType":"module"}