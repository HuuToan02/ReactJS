{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nconst useFetch = () => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [isPeding, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetch(\"http://localhost:8000/blogs\").then(res => {\n      if (!res.ok) {\n        throw new Error(\"Cound not fetch the data for that resource\");\n      }\n\n      return res.json();\n    }).then(data => {\n      setBlogs(data);\n      setIsPending(false);\n      setError(null);\n    }).catch(err => {\n      setIsPending(false);\n      setError(err.message);\n    });\n  }, []);\n};\n\n_s(useFetch, \"2XqhfrL0V4LZmyPSyhelJSbssuk=\");\n\nexport default useFetch;","map":{"version":3,"sources":["C:/Users/Toan/Desktop/reactjs/src/useFetch.js"],"names":["useState","useEffect","useFetch","data","setData","isPeding","setIsPending","error","setError","fetch","then","res","ok","Error","json","setBlogs","catch","err","message"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACK,QAAD,EAAWC,YAAX,IAA2BN,QAAQ,CAAC,IAAD,CAAzC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,KAAK,CAAC,6BAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAAS;AACb,UAAI,CAACA,GAAG,CAACC,EAAT,EAAa;AACX,cAAM,IAAIC,KAAJ,CAAU,4CAAV,CAAN;AACD;;AACD,aAAOF,GAAG,CAACG,IAAJ,EAAP;AACD,KANH,EAOGJ,IAPH,CAOSP,IAAD,IAAU;AACdY,MAAAA,QAAQ,CAACZ,IAAD,CAAR;AACAG,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KAXH,EAYGQ,KAZH,CAYUC,GAAD,IAAS;AACdX,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,QAAQ,CAACS,GAAG,CAACC,OAAL,CAAR;AACD,KAfH;AAgBD,GAjBQ,EAiBN,EAjBM,CAAT;AAkBD,CAvBD;;GAAMhB,Q;;AAyBN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst useFetch = () => {\r\n  const [data, setData] = useState(null);\r\n  const [isPeding, setIsPending] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:8000/blogs\")\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw new Error(\"Cound not fetch the data for that resource\");\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        setBlogs(data);\r\n        setIsPending(false);\r\n        setError(null);\r\n      })\r\n      .catch((err) => {\r\n        setIsPending(false);\r\n        setError(err.message);\r\n      });\r\n  }, []);\r\n};\r\n\r\nexport default useFetch;\r\n"]},"metadata":{},"sourceType":"module"}