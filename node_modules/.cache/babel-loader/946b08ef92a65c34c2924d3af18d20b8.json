{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Toan\\\\Desktop\\\\reactjs\\\\src\\\\TodoList.js\";\nimport { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoList = ({\n  todolist,\n  text\n}) => {\n  var _s = $RefreshSig$();\n\n  const TodoForm = () => {\n    _s();\n\n    const {\n      id\n    } = useParams();\n    const [text, setText] = useState(\"\");\n    const [isPending, setIsPending] = useState(false);\n\n    const handleChange = e => {\n      setText(e.target.value);\n    };\n\n    const handleSubmit = e => {\n      // e.preventDefault();\n      const todo = {\n        text\n      };\n      setIsPending(true);\n      fetch(\"http://localhost:8000/todolist\" + id, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(todo)\n      }).then(() => {\n        setIsPending(false);\n      });\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"What need to be done?\",\n        name: \"text\",\n        onChange: handleChange,\n        required: true,\n        value: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), !isPending && /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 24\n      }, this), isPending && /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: true,\n        children: \"Adding...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  };\n\n  _s(TodoForm, \"VEKecjJfcHdCX4wbzdHUQ/3Zfu0=\", false, function () {\n    return [useParams];\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), todolist.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-preview\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"checkbox\",\n        type: \"checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-todo\",\n        children: todo.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, todo.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["C:/Users/Toan/Desktop/reactjs/src/TodoList.js"],"names":["useState","useParams","TodoList","todolist","text","TodoForm","id","setText","isPending","setIsPending","handleChange","e","target","value","handleSubmit","todo","fetch","method","headers","body","JSON","stringify","then","map"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAwB;AAAA;;AACvC,QAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,UAAM;AAAEC,MAAAA;AAAF,QAASL,SAAS,EAAxB;AACA,UAAM,CAACG,IAAD,EAAOG,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,UAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;;AAEA,UAAMU,YAAY,GAAIC,CAAD,IAAO;AAC1BJ,MAAAA,OAAO,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACD,KAFD;;AAIA,UAAMC,YAAY,GAAIH,CAAD,IAAO;AAC1B;AACA,YAAMI,IAAI,GAAG;AAAEX,QAAAA;AAAF,OAAb;AACAK,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAO,MAAAA,KAAK,CAAC,mCAAmCV,EAApC,EAAwC;AAC3CW,QAAAA,MAAM,EAAE,MADmC;AAE3CC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFkC;AAG3CC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf;AAHqC,OAAxC,CAAL,CAIGO,IAJH,CAIQ,MAAM;AACZb,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OAND;AAOD,KAXD;;AAaA,wBACE;AAAM,MAAA,QAAQ,EAAEK,YAAhB;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,uBAFd;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,QAAQ,EAAEJ,YAJZ;AAKE,QAAA,QAAQ,MALV;AAME,QAAA,KAAK,EAAEN;AANT;AAAA;AAAA;AAAA;AAAA,cADF,EASG,CAACI,SAAD,iBAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATjB,EAUGA,SAAS,iBAAI;AAAQ,QAAA,QAAQ,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVhB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAcD,GApCD;;AADuC,KACjCH,QADiC;AAAA,YAEtBJ,SAFsB;AAAA;;AAuCvC,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAA,gBAAKG;AAAL;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGD,QAAQ,CAACoB,GAAT,CAAcR,IAAD,iBACZ;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAO,QAAA,SAAS,EAAC,UAAjB;AAA4B,QAAA,IAAI,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA,kBAA0BA,IAAI,CAACX;AAA/B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,OAAmCW,IAAI,CAACT,EAAxC;AAAA;AAAA;AAAA;AAAA,YADD,CAHH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CApDD;;KAAMJ,Q;AAsDN,eAAeA,QAAf","sourcesContent":["import { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst TodoList = ({ todolist, text }) => {\r\n  const TodoForm = () => {\r\n    const { id } = useParams();\r\n    const [text, setText] = useState(\"\");\r\n    const [isPending, setIsPending] = useState(false);\r\n\r\n    const handleChange = (e) => {\r\n      setText(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n      // e.preventDefault();\r\n      const todo = { text };\r\n      setIsPending(true);\r\n      fetch(\"http://localhost:8000/todolist\" + id, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(todo),\r\n      }).then(() => {\r\n        setIsPending(false);\r\n      });\r\n    };\r\n\r\n    return (\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"What need to be done?\"\r\n          name=\"text\"\r\n          onChange={handleChange}\r\n          required\r\n          value={text}\r\n        />\r\n        {!isPending && <button>Add Task</button>}\r\n        {isPending && <button disabled>Adding...</button>}\r\n      </form>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"todo-list\">\r\n      <h2>{text}</h2>\r\n      <TodoForm></TodoForm>\r\n      {todolist.map((todo) => (\r\n        <div className=\"todo-preview\" key={todo.id}>\r\n          <input className=\"checkbox\" type=\"checkbox\" />\r\n          <p className=\"text-todo\">{todo.text}</p>\r\n          {/* <button onClick={handleDelete}>Delete</button> */}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n"]},"metadata":{},"sourceType":"module"}