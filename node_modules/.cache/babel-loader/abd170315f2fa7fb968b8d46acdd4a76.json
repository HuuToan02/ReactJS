{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Toan\\\\Desktop\\\\reactjs\\\\src\\\\components\\\\pages\\\\Box.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from \"react\";\nimport { useFrame } from \"@react-three/fiber\";\nimport create from \"zustand\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BOX_COUNT = 120;\nconst boxIds = new Array(BOX_COUNT).fill().map((_, idx) => idx);\nconst boxIdsCoordinates = boxIds.reduce((acc, id) => ({ ...acc,\n  [id]: [Math.random() * Math.PI, Math.random() * Math.PI, Math.random() * Math.PI]\n}), 0);\nexport const useStore = create(set => ({\n  boxes: boxIds,\n  coordinates: boxIdsCoordinates,\n  mutate: () => {\n    set(state => {\n      const coordinates = {};\n\n      for (let i = 0; i < state.boxes.length; i++) {\n        const id = state.boxes[i];\n        const [x, y, z] = state.coordinates[id];\n        coordinates[id] = [x + 0.01, y + 0.01, z + 0.01];\n      }\n\n      return { ...state,\n        coordinates\n      };\n    });\n  }\n}));\nexport function Box({\n  id\n}) {\n  _s();\n\n  const mesh = useRef();\n  const coordinates = useRef([0, 0, 0]);\n  useEffect(() => useStore.subscribe(xyz => coordinates.current = xyz, state => state.coordinates[id]));\n  useFrame(() => mesh.current && mesh.current.rotation.set(...coordinates.current));\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    ref: mesh,\n    children: [/*#__PURE__*/_jsxDEV(\"boxBufferGeometry\", {\n      args: [2, 2, 2],\n      attach: \"geometry\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshNormalMaterial\", {\n      attach: \"material\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Box, \"BAfJuxofP5QYtznO6Yjzn/YrZoE=\", false, function () {\n  return [useFrame];\n});\n\n_c = Box;\n\nvar _c;\n\n$RefreshReg$(_c, \"Box\");","map":{"version":3,"sources":["C:/Users/Toan/Desktop/reactjs/src/components/pages/Box.js"],"names":["React","useRef","useEffect","useFrame","create","BOX_COUNT","boxIds","Array","fill","map","_","idx","boxIdsCoordinates","reduce","acc","id","Math","random","PI","useStore","set","boxes","coordinates","mutate","state","i","length","x","y","z","Box","mesh","subscribe","xyz","current","rotation"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,MAAP,MAAmB,SAAnB;;AAEA,MAAMC,SAAS,GAAG,GAAlB;AAEA,MAAMC,MAAM,GAAG,IAAIC,KAAJ,CAAUF,SAAV,EAAqBG,IAArB,GAA4BC,GAA5B,CAAgC,CAACC,CAAD,EAAIC,GAAJ,KAAYA,GAA5C,CAAf;AACA,MAAMC,iBAAiB,GAAGN,MAAM,CAACO,MAAP,CACxB,CAACC,GAAD,EAAMC,EAAN,MAAc,EACZ,GAAGD,GADS;AAEZ,GAACC,EAAD,GAAM,CACJC,IAAI,CAACC,MAAL,KAAgBD,IAAI,CAACE,EADjB,EAEJF,IAAI,CAACC,MAAL,KAAgBD,IAAI,CAACE,EAFjB,EAGJF,IAAI,CAACC,MAAL,KAAgBD,IAAI,CAACE,EAHjB;AAFM,CAAd,CADwB,EASxB,CATwB,CAA1B;AAYA,OAAO,MAAMC,QAAQ,GAAGf,MAAM,CAAEgB,GAAD,KAAU;AACvCC,EAAAA,KAAK,EAAEf,MADgC;AAEvCgB,EAAAA,WAAW,EAAEV,iBAF0B;AAGvCW,EAAAA,MAAM,EAAE,MAAM;AACZH,IAAAA,GAAG,CAAEI,KAAD,IAAW;AACb,YAAMF,WAAW,GAAG,EAApB;;AACA,WAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACH,KAAN,CAAYK,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;AAC3C,cAAMV,EAAE,GAAGS,KAAK,CAACH,KAAN,CAAYI,CAAZ,CAAX;AACA,cAAM,CAACE,CAAD,EAAIC,CAAJ,EAAOC,CAAP,IAAYL,KAAK,CAACF,WAAN,CAAkBP,EAAlB,CAAlB;AACAO,QAAAA,WAAW,CAACP,EAAD,CAAX,GAAkB,CAACY,CAAC,GAAG,IAAL,EAAWC,CAAC,GAAG,IAAf,EAAqBC,CAAC,GAAG,IAAzB,CAAlB;AACD;;AACD,aAAO,EAAE,GAAGL,KAAL;AAAYF,QAAAA;AAAZ,OAAP;AACD,KARE,CAAH;AASD;AAbsC,CAAV,CAAD,CAAvB;AAgBP,OAAO,SAASQ,GAAT,CAAa;AAAEf,EAAAA;AAAF,CAAb,EAAqB;AAAA;;AAC1B,QAAMgB,IAAI,GAAG9B,MAAM,EAAnB;AACA,QAAMqB,WAAW,GAAGrB,MAAM,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAD,CAA1B;AACAC,EAAAA,SAAS,CAAC,MACRiB,QAAQ,CAACa,SAAT,CACGC,GAAD,IAAUX,WAAW,CAACY,OAAZ,GAAsBD,GADlC,EAEGT,KAAD,IAAWA,KAAK,CAACF,WAAN,CAAkBP,EAAlB,CAFb,CADO,CAAT;AAMAZ,EAAAA,QAAQ,CACN,MAAM4B,IAAI,CAACG,OAAL,IAAgBH,IAAI,CAACG,OAAL,CAAaC,QAAb,CAAsBf,GAAtB,CAA0B,GAAGE,WAAW,CAACY,OAAzC,CADhB,CAAR;AAGA,sBACE;AAAM,IAAA,GAAG,EAAEH,IAAX;AAAA,4BACE;AAAmB,MAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAzB;AAAoC,MAAA,MAAM,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAoB,MAAA,MAAM,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAlBeD,G;UASd3B,Q;;;KATc2B,G","sourcesContent":["import React, { useRef, useEffect } from \"react\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\nimport create from \"zustand\";\r\n\r\nconst BOX_COUNT = 120;\r\n\r\nconst boxIds = new Array(BOX_COUNT).fill().map((_, idx) => idx);\r\nconst boxIdsCoordinates = boxIds.reduce(\r\n  (acc, id) => ({\r\n    ...acc,\r\n    [id]: [\r\n      Math.random() * Math.PI,\r\n      Math.random() * Math.PI,\r\n      Math.random() * Math.PI,\r\n    ],\r\n  }),\r\n  0\r\n);\r\n\r\nexport const useStore = create((set) => ({\r\n  boxes: boxIds,\r\n  coordinates: boxIdsCoordinates,\r\n  mutate: () => {\r\n    set((state) => {\r\n      const coordinates = {};\r\n      for (let i = 0; i < state.boxes.length; i++) {\r\n        const id = state.boxes[i];\r\n        const [x, y, z] = state.coordinates[id];\r\n        coordinates[id] = [x + 0.01, y + 0.01, z + 0.01];\r\n      }\r\n      return { ...state, coordinates };\r\n    });\r\n  },\r\n}));\r\n\r\nexport function Box({ id }) {\r\n  const mesh = useRef();\r\n  const coordinates = useRef([0, 0, 0]);\r\n  useEffect(() =>\r\n    useStore.subscribe(\r\n      (xyz) => (coordinates.current = xyz),\r\n      (state) => state.coordinates[id]\r\n    )\r\n  );\r\n  useFrame(\r\n    () => mesh.current && mesh.current.rotation.set(...coordinates.current)\r\n  );\r\n  return (\r\n    <mesh ref={mesh}>\r\n      <boxBufferGeometry args={[2, 2, 2]} attach=\"geometry\" />\r\n      <meshNormalMaterial attach=\"material\" />\r\n    </mesh>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}