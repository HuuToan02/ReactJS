{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Toan\\\\Desktop\\\\reactjs\\\\src\\\\TodoList.js\",\n    _s2 = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoList = ({\n  todolist,\n  text\n}) => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const {\n    id\n  } = useParams();\n  const history = useHistory();\n\n  const Add = () => {\n    _s();\n\n    const [text, setText] = useState(\"\");\n    const [isPending, setIsPending] = useState(false);\n\n    const handleSubmit = () => {\n      const todo = {\n        text\n      };\n      setIsPending(true);\n      fetch(\"http://localhost:8000/todolist\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(todo)\n      }).then(() => {\n        setIsPending(false);\n      });\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"What need to be done?\",\n        onChange: e => {\n          setText(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), !isPending && /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 24\n      }, this), isPending && /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: true,\n        children: \"Adding...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }; // const { data: todo, isPending } = useFetch(\n  //   \"http://localhost:8000/todolist/\" + id\n  // );\n  // const handleDelete = () => {\n  //   fetch(\"http://localhost:8000/todolist/\" + id, {\n  //     method: \"DELETE\",\n  //   });\n  // };\n\n\n  _s(Add, \"XGnL+MaKZlGsXxWDqxv+fOR+KoU=\");\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Add, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), todolist.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-preview\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"form-check\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"form-check-input\",\n          type: \"checkbox\",\n          value: \"\",\n          id: \"defaultCheck1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          class: \"form-check-label\",\n          for: \"defaultCheck1\",\n          children: \"Default checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-todo\",\n        children: todo.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, todo.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(TodoList, \"vnJ8ushAlR9zVlHAHzn7T414utw=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["C:/Users/Toan/Desktop/reactjs/src/TodoList.js"],"names":["useState","useParams","useHistory","TodoList","todolist","text","id","history","Add","setText","isPending","setIsPending","handleSubmit","todo","fetch","method","headers","body","JSON","stringify","then","e","target","value","map"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAwB;AAAA;;AAAA;;AACvC,QAAM;AAAEC,IAAAA;AAAF,MAASL,SAAS,EAAxB;AACA,QAAMM,OAAO,GAAGL,UAAU,EAA1B;;AAEA,QAAMM,GAAG,GAAG,MAAM;AAAA;;AAChB,UAAM,CAACH,IAAD,EAAOI,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,UAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,KAAD,CAA1C;;AAEA,UAAMY,YAAY,GAAG,MAAM;AACzB,YAAMC,IAAI,GAAG;AAAER,QAAAA;AAAF,OAAb;AACAM,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAG,MAAAA,KAAK,CAAC,gCAAD,EAAmC;AACtCC,QAAAA,MAAM,EAAE,MAD8B;AAEtCC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAF6B;AAGtCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf;AAHgC,OAAnC,CAAL,CAIGO,IAJH,CAIQ,MAAM;AACZT,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OAND;AAOD,KAVD;;AAYA,wBACE;AAAM,MAAA,QAAQ,EAAEC,YAAhB;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,uBAFd;AAGE,QAAA,QAAQ,EAAGS,CAAD,IAAO;AACfZ,UAAAA,OAAO,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACD;AALH;AAAA;AAAA;AAAA;AAAA,cADF,EAQG,CAACb,SAAD,iBAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARjB,EASGA,SAAS,iBAAI;AAAQ,QAAA,QAAQ,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAThB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD,GA7BD,CAJuC,CAmCvC;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AA3CuC,KAIjCF,GAJiC;;AA6CvC,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAA,gBAAKH;AAAL;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGD,QAAQ,CAACoB,GAAT,CAAcX,IAAD,iBACZ;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAK,QAAA,KAAK,EAAC,YAAX;AAAA,gCACE;AACE,UAAA,KAAK,EAAC,kBADR;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,KAAK,EAAC,EAHR;AAIE,UAAA,EAAE,EAAC;AAJL;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AAAO,UAAA,KAAK,EAAC,kBAAb;AAAgC,UAAA,GAAG,EAAC,eAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAcE;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA,kBAA0BA,IAAI,CAACR;AAA/B;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA,OAAmCQ,IAAI,CAACP,EAAxC;AAAA;AAAA;AAAA;AAAA,YADD,CAHH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CAtED;;IAAMH,Q;UACWF,S,EACCC,U;;;KAFZC,Q;AAwEN,eAAeA,QAAf","sourcesContent":["import { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst TodoList = ({ todolist, text }) => {\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n\r\n  const Add = () => {\r\n    const [text, setText] = useState(\"\");\r\n    const [isPending, setIsPending] = useState(false);\r\n\r\n    const handleSubmit = () => {\r\n      const todo = { text };\r\n      setIsPending(true);\r\n      fetch(\"http://localhost:8000/todolist\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(todo),\r\n      }).then(() => {\r\n        setIsPending(false);\r\n      });\r\n    };\r\n\r\n    return (\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"What need to be done?\"\r\n          onChange={(e) => {\r\n            setText(e.target.value);\r\n          }}\r\n        />\r\n        {!isPending && <button>Add Task</button>}\r\n        {isPending && <button disabled>Adding...</button>}\r\n      </form>\r\n    );\r\n  };\r\n\r\n  // const { data: todo, isPending } = useFetch(\r\n  //   \"http://localhost:8000/todolist/\" + id\r\n  // );\r\n\r\n  // const handleDelete = () => {\r\n  //   fetch(\"http://localhost:8000/todolist/\" + id, {\r\n  //     method: \"DELETE\",\r\n  //   });\r\n  // };\r\n\r\n  return (\r\n    <div className=\"todo-list\">\r\n      <h2>{text}</h2>\r\n      <Add></Add>\r\n      {todolist.map((todo) => (\r\n        <div className=\"todo-preview\" key={todo.id}>\r\n          <div class=\"form-check\">\r\n            <input\r\n              class=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              value=\"\"\r\n              id=\"defaultCheck1\"\r\n            />\r\n            <label class=\"form-check-label\" for=\"defaultCheck1\">\r\n              Default checkbox\r\n            </label>\r\n          </div>\r\n\r\n          {/* <input className=\"checkbox\" type=\"checkbox\" /> */}\r\n          <p className=\"text-todo\">{todo.text}</p>\r\n          {/* <button onClick={handleDelete}>Delete</button> */}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n"]},"metadata":{},"sourceType":"module"}