{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Toan\\\\Desktop\\\\reactjs\\\\src\\\\TodoList.js\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoList = ({\n  todolist,\n  text\n}) => {\n  var _s = $RefreshSig$();\n\n  const Add = () => {\n    _s();\n\n    const [text, setText] = useState(\"\"); // const [isPending, setIsPending] = useState(false);\n\n    const handleSubmit = e => {\n      const todo = {\n        text\n      }; // setPending(true);\n\n      fetch(\"http://localhost:8000/todolist\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(todo)\n      }).then(() => {// setIsPending(false);\n      });\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"What need to be done?\",\n          onChange: e => {\n            setText(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), todolist.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-preview\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"checkbox\",\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: todo.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  };\n\n  _s(Add, \"3t0DFnMi16eB/7p7iIKtjG5r68g=\");\n};\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["C:/Users/Toan/Desktop/reactjs/src/TodoList.js"],"names":["useState","TodoList","todolist","text","Add","setText","handleSubmit","e","todo","fetch","method","headers","body","JSON","stringify","then","target","value","map","id"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAwB;AAAA;;AACvC,QAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,UAAM,CAACD,IAAD,EAAOE,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC,CADgB,CAEhB;;AACA,UAAMM,YAAY,GAAIC,CAAD,IAAO;AAC1B,YAAMC,IAAI,GAAG;AAAEL,QAAAA;AAAF,OAAb,CAD0B,CAE1B;;AACAM,MAAAA,KAAK,CAAC,gCAAD,EAAmC;AACtCC,QAAAA,MAAM,EAAE,MAD8B;AAEtCC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAF6B;AAGtCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf;AAHgC,OAAnC,CAAL,CAIGO,IAJH,CAIQ,MAAM,CACZ;AACD,OAND;AAOD,KAVD;;AAYA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAA,kBAAKZ;AAAL;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,QAAQ,EAAEG,YAAhB;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,uBAFd;AAGE,UAAA,QAAQ,EAAGC,CAAD,IAAO;AACfF,YAAAA,OAAO,CAACE,CAAC,CAACS,MAAF,CAASC,KAAV,CAAP;AACD;AALH;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAcGf,QAAQ,CAACgB,GAAT,CAAcV,IAAD,iBACZ;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE;AAAO,UAAA,SAAS,EAAC,UAAjB;AAA4B,UAAA,IAAI,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAIA,IAAI,CAACL;AAAT;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,SAAmCK,IAAI,CAACW,EAAxC;AAAA;AAAA;AAAA;AAAA,cADD,CAdH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAuBD,GAtCD;;AADuC,KACjCf,GADiC;AAwCxC,CAxCD;;KAAMH,Q;AA0CN,eAAeA,QAAf","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst TodoList = ({ todolist, text }) => {\r\n  const Add = () => {\r\n    const [text, setText] = useState(\"\");\r\n    // const [isPending, setIsPending] = useState(false);\r\n    const handleSubmit = (e) => {\r\n      const todo = { text };\r\n      // setPending(true);\r\n      fetch(\"http://localhost:8000/todolist\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(todo),\r\n      }).then(() => {\r\n        // setIsPending(false);\r\n      });\r\n    };\r\n\r\n    return (\r\n      <div className=\"todo-list\">\r\n        <h2>{text}</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"What need to be done?\"\r\n            onChange={(e) => {\r\n              setText(e.target.value);\r\n            }}\r\n          />\r\n          {/* {!isPending && <button>Add Task</button>} */}\r\n          {/* {isPending && <button disabled>Adding Todo...</button>} */}\r\n          <button>Add Task</button>\r\n        </form>\r\n        {todolist.map((todo) => (\r\n          <div className=\"todo-preview\" key={todo.id}>\r\n            <input className=\"checkbox\" type=\"checkbox\" />\r\n            <p>{todo.text}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nexport default TodoList;\r\n"]},"metadata":{},"sourceType":"module"}