{"ast":null,"code":"var _s2 = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nconst useFetch = url => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  setTimeout(_s(() => {\n    _s();\n\n    useEffect(() => {\n      fetch(url).then(res => {\n        if (!res.ok) {\n          throw new Error(\"Cound not fetch the data for that resource\");\n        }\n\n        return res.json();\n      }).then(data => {\n        setData(data);\n        setIsPending(false);\n        setError(null);\n      }).catch(err => {\n        setIsPending(false);\n        setError(err.message);\n      });\n    }, [url]);\n  }, \"OD7bBpZva5O2jO+Puf00hKivP7c=\"), 1000);\n  return {\n    data,\n    isPending,\n    error\n  };\n};\n\n_s2(useFetch, \"Z23tQxuo1vwhnz1JJr7Qoh+Ps/M=\");\n\nexport default useFetch;","map":{"version":3,"sources":["C:/Users/Toan/Desktop/reactjs/src/useFetch.js"],"names":["useState","useEffect","useFetch","url","data","setData","isPending","setIsPending","error","setError","setTimeout","fetch","then","res","ok","Error","json","catch","err","message"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AAAA;;AAAA;;AACxB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AAEAU,EAAAA,UAAU,IAAC,MAAM;AAAA;;AACfT,IAAAA,SAAS,CAAC,MAAM;AACdU,MAAAA,KAAK,CAACR,GAAD,CAAL,CACGS,IADH,CACSC,GAAD,IAAS;AACb,YAAI,CAACA,GAAG,CAACC,EAAT,EAAa;AACX,gBAAM,IAAIC,KAAJ,CAAU,4CAAV,CAAN;AACD;;AACD,eAAOF,GAAG,CAACG,IAAJ,EAAP;AACD,OANH,EAOGJ,IAPH,CAOSR,IAAD,IAAU;AACdC,QAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,OAXH,EAYGQ,KAZH,CAYUC,GAAD,IAAS;AACdX,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,QAAAA,QAAQ,CAACS,GAAG,CAACC,OAAL,CAAR;AACD,OAfH;AAgBD,KAjBQ,EAiBN,CAAChB,GAAD,CAjBM,CAAT;AAkBD,GAnBS,mCAmBP,IAnBO,CAAV;AAqBA,SAAO;AAAEC,IAAAA,IAAF;AAAQE,IAAAA,SAAR;AAAmBE,IAAAA;AAAnB,GAAP;AACD,CA3BD;;IAAMN,Q;;AA6BN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst useFetch = (url) => {\r\n  const [data, setData] = useState(null);\r\n  const [isPending, setIsPending] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  setTimeout(() => {\r\n    useEffect(() => {\r\n      fetch(url)\r\n        .then((res) => {\r\n          if (!res.ok) {\r\n            throw new Error(\"Cound not fetch the data for that resource\");\r\n          }\r\n          return res.json();\r\n        })\r\n        .then((data) => {\r\n          setData(data);\r\n          setIsPending(false);\r\n          setError(null);\r\n        })\r\n        .catch((err) => {\r\n          setIsPending(false);\r\n          setError(err.message);\r\n        });\r\n    }, [url]);\r\n  }, 1000);\r\n\r\n  return { data, isPending, error };\r\n};\r\n\r\nexport default useFetch;\r\n"]},"metadata":{},"sourceType":"module"}