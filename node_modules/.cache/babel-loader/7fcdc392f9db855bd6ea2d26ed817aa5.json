{"ast":null,"code":"import _slicedToArray from\"C:/Users/Toan/Desktop/reactjs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TodoList=function TodoList(_ref){var todolist=_ref.todolist,text=_ref.text;var Add=function Add(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),text=_useState2[0],setText=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isPending=_useState4[0],setIsPending=_useState4[1];var handleSubmit=function handleSubmit(){var todo={text:text};setIsPending(true);fetch(\"https://60c9e7eb772a760017204b93.mockapi.io/todolist\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(todo)}).then(function(){setIsPending(false);});};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"What need to be done?\",onChange:function onChange(e){setText(e.target.value);}}),!isPending&&/*#__PURE__*/_jsx(\"button\",{children:\"Add Task\"}),isPending&&/*#__PURE__*/_jsx(\"button\",{disabled:true,children:\"Adding...\"})]});};// const { data: todo, isPending } = useFetch(\n//   \"http://localhost:8000/todolist/\" + id\n// );\n// const handleDelete = () => {\n//   fetch(\"http://localhost:8000/todolist/\" + id, {\n//     method: \"DELETE\",\n//   });\n// };\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"todo-list\",children:[/*#__PURE__*/_jsx(\"h2\",{children:text}),/*#__PURE__*/_jsx(Add,{}),todolist.map(function(todo){return/*#__PURE__*/_jsxs(\"div\",{className:\"todo-preview\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"checkbox\",type:\"checkbox\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-todo\",children:todo.text})]},todo.id);})]});};export default TodoList;","map":{"version":3,"sources":["C:/Users/Toan/Desktop/reactjs/src/TodoList.js"],"names":["useState","TodoList","todolist","text","Add","setText","isPending","setIsPending","handleSubmit","todo","fetch","method","headers","body","JSON","stringify","then","e","target","value","map","id"],"mappings":"oJAAA,OAASA,QAAT,KAAyB,OAAzB,C,wFAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAwB,IAArBC,CAAAA,QAAqB,MAArBA,QAAqB,CAAXC,IAAW,MAAXA,IAAW,CACvC,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,CAChB,cAAwBJ,QAAQ,CAAC,EAAD,CAAhC,wCAAOG,IAAP,eAAaE,OAAb,eACA,eAAkCL,QAAQ,CAAC,KAAD,CAA1C,yCAAOM,SAAP,eAAkBC,YAAlB,eAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzB,GAAMC,CAAAA,IAAI,CAAG,CAAEN,IAAI,CAAJA,IAAF,CAAb,CACAI,YAAY,CAAC,IAAD,CAAZ,CACAG,KAAK,CAAC,sDAAD,CAAyD,CAC5DC,MAAM,CAAE,MADoD,CAE5DC,OAAO,CAAE,CAAE,eAAgB,kBAAlB,CAFmD,CAG5DC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAHsD,CAAzD,CAAL,CAIGO,IAJH,CAIQ,UAAM,CACZT,YAAY,CAAC,KAAD,CAAZ,CACD,CAND,EAOD,CAVD,CAYA,mBACE,cAAM,QAAQ,CAAEC,YAAhB,wBACE,cACE,IAAI,CAAC,MADP,CAEE,WAAW,CAAC,uBAFd,CAGE,QAAQ,CAAE,kBAACS,CAAD,CAAO,CACfZ,OAAO,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP,CACD,CALH,EADF,CAQG,CAACb,SAAD,eAAc,oCARjB,CASGA,SAAS,eAAI,eAAQ,QAAQ,KAAhB,uBAThB,GADF,CAaD,CA7BD,CA+BA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA,mBACE,aAAK,SAAS,CAAC,WAAf,wBACE,oBAAKH,IAAL,EADF,cAEE,KAAC,GAAD,IAFF,CAGGD,QAAQ,CAACkB,GAAT,CAAa,SAACX,IAAD,qBACZ,aAAK,SAAS,CAAC,cAAf,wBACE,cAAO,SAAS,CAAC,UAAjB,CAA4B,IAAI,CAAC,UAAjC,EADF,cAEE,UAAG,SAAS,CAAC,WAAb,UAA0BA,IAAI,CAACN,IAA/B,EAFF,GAAmCM,IAAI,CAACY,EAAxC,CADY,EAAb,CAHH,GADF,CAaD,CAvDD,CAyDA,cAAepB,CAAAA,QAAf","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst TodoList = ({ todolist, text }) => {\r\n  const Add = () => {\r\n    const [text, setText] = useState(\"\");\r\n    const [isPending, setIsPending] = useState(false);\r\n\r\n    const handleSubmit = () => {\r\n      const todo = { text };\r\n      setIsPending(true);\r\n      fetch(\"https://60c9e7eb772a760017204b93.mockapi.io/todolist\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(todo),\r\n      }).then(() => {\r\n        setIsPending(false);\r\n      });\r\n    };\r\n\r\n    return (\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"What need to be done?\"\r\n          onChange={(e) => {\r\n            setText(e.target.value);\r\n          }}\r\n        />\r\n        {!isPending && <button>Add Task</button>}\r\n        {isPending && <button disabled>Adding...</button>}\r\n      </form>\r\n    );\r\n  };\r\n\r\n  // const { data: todo, isPending } = useFetch(\r\n  //   \"http://localhost:8000/todolist/\" + id\r\n  // );\r\n\r\n  // const handleDelete = () => {\r\n  //   fetch(\"http://localhost:8000/todolist/\" + id, {\r\n  //     method: \"DELETE\",\r\n  //   });\r\n  // };\r\n\r\n  return (\r\n    <div className=\"todo-list\">\r\n      <h2>{text}</h2>\r\n      <Add></Add>\r\n      {todolist.map((todo) => (\r\n        <div className=\"todo-preview\" key={todo.id}>\r\n          <input className=\"checkbox\" type=\"checkbox\" />\r\n          <p className=\"text-todo\">{todo.text}</p>\r\n          {/* <button onClick={handleDelete}>Delete</button> */}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n"]},"metadata":{},"sourceType":"module"}