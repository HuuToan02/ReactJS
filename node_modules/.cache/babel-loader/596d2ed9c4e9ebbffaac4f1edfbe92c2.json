{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Toan\\\\Desktop\\\\reactjs\\\\src\\\\TodoList.js\";\nimport { useState } from \"react\"; // const Add = () => {\n//   const [text, setText] = useState(\"\");\n//   const [isPending, setIsPending] = useState(false);\n//   const handleSubmit = (e) => {\n//     const todo = { text };\n//     setIsPending(true);\n//     fetch(\"http://localhost:8000/todolist\", {\n//       method: \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify(todo),\n//     }).then(() => {\n//       setIsPending(false);\n//     });\n//   };\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <input\n//         type=\"text\"\n//         placeholder=\"What need to be done?\"\n//         onChange={(e) => {\n//           setText(e.target.value);\n//         }}\n//       />\n//       {!isPending && <button>Add Task</button>}\n//       {isPending && <button disabled>Adding Todo...</button>}\n//       <button>Add Task</button>\n//     </form>\n//   );\n// };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoList = ({\n  todolist,\n  text\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"What need to be done?\",\n      onChange: e => {\n        setText(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), todolist.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-preview\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"checkbox\",\n        type: \"checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: todo.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, todo.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["C:/Users/Toan/Desktop/reactjs/src/TodoList.js"],"names":["useState","TodoList","todolist","text","e","setText","target","value","map","todo","id"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAwB;AACvC,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAA,gBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,uBAFd;AAGE,MAAA,QAAQ,EAAGC,CAAD,IAAO;AACfC,QAAAA,OAAO,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAAP;AACD;AALH;AAAA;AAAA;AAAA;AAAA,YAFF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,EAUGL,QAAQ,CAACM,GAAT,CAAcC,IAAD,iBACZ;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAO,QAAA,SAAS,EAAC,UAAjB;AAA4B,QAAA,IAAI,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAIA,IAAI,CAACN;AAAT;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,OAAmCM,IAAI,CAACC,EAAxC;AAAA;AAAA;AAAA;AAAA,YADD,CAVH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CApBD;;KAAMT,Q;AAsBN,eAAeA,QAAf","sourcesContent":["import { useState } from \"react\";\r\n\r\n// const Add = () => {\r\n//   const [text, setText] = useState(\"\");\r\n//   const [isPending, setIsPending] = useState(false);\r\n\r\n//   const handleSubmit = (e) => {\r\n//     const todo = { text };\r\n//     setIsPending(true);\r\n//     fetch(\"http://localhost:8000/todolist\", {\r\n//       method: \"POST\",\r\n//       headers: { \"Content-Type\": \"application/json\" },\r\n//       body: JSON.stringify(todo),\r\n//     }).then(() => {\r\n//       setIsPending(false);\r\n//     });\r\n//   };\r\n\r\n//   return (\r\n//     <form onSubmit={handleSubmit}>\r\n//       <input\r\n//         type=\"text\"\r\n//         placeholder=\"What need to be done?\"\r\n//         onChange={(e) => {\r\n//           setText(e.target.value);\r\n//         }}\r\n//       />\r\n//       {!isPending && <button>Add Task</button>}\r\n//       {isPending && <button disabled>Adding Todo...</button>}\r\n//       <button>Add Task</button>\r\n//     </form>\r\n//   );\r\n// };\r\n\r\nconst TodoList = ({ todolist, text }) => {\r\n  return (\r\n    <div className=\"todo-list\">\r\n      <h2>{text}</h2>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"What need to be done?\"\r\n        onChange={(e) => {\r\n          setText(e.target.value);\r\n        }}\r\n      />\r\n      <button>Add Task</button>\r\n      {todolist.map((todo) => (\r\n        <div className=\"todo-preview\" key={todo.id}>\r\n          <input className=\"checkbox\" type=\"checkbox\" />\r\n          <p>{todo.text}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n"]},"metadata":{},"sourceType":"module"}