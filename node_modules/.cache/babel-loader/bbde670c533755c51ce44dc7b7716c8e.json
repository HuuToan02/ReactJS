{"ast":null,"code":"import _slicedToArray from\"C:/Users/Toan/Desktop/reactjs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from\"react\";var useFetch=function useFetch(url){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),isPending=_useState4[0],setIsPending=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),error=_useState6[0],setError=_useState6[1];useEffect(function(){var abortCont=new AbortController();fetch(url,{signal:abortCont.signal}).then(function(res){if(!res.ok){throw new Error(\"Cound not fetch the data for that resource\");}return res.json();}).then(function(data){setData(data);setIsPending(false);setError(null);}).catch(function(err){if(err.name===\"AbortError\"){console.error(\"Fetch aborted\");}else{setIsPending(false);setError(err.message);}});return function(){return abortCont.abort();};},[url]);return{data:data,isPending:isPending,error:error};};export default useFetch;","map":{"version":3,"sources":["C:/Users/Toan/Desktop/reactjs/src/useFetch.js"],"names":["useState","useEffect","useFetch","url","data","setData","isPending","setIsPending","error","setError","abortCont","AbortController","fetch","signal","then","res","ok","Error","json","catch","err","name","console","message","abort"],"mappings":"oJAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,GAAD,CAAS,CACxB,cAAwBH,QAAQ,CAAC,IAAD,CAAhC,wCAAOI,IAAP,eAAaC,OAAb,eACA,eAAkCL,QAAQ,CAAC,IAAD,CAA1C,yCAAOM,SAAP,eAAkBC,YAAlB,eACA,eAA0BP,QAAQ,CAAC,IAAD,CAAlC,yCAAOQ,KAAP,eAAcC,QAAd,eAEAR,SAAS,CAAC,UAAM,CACd,GAAMS,CAAAA,SAAS,CAAG,GAAIC,CAAAA,eAAJ,EAAlB,CAEAC,KAAK,CAACT,GAAD,CAAM,CAAEU,MAAM,CAAEH,SAAS,CAACG,MAApB,CAAN,CAAL,CACGC,IADH,CACQ,SAACC,GAAD,CAAS,CACb,GAAI,CAACA,GAAG,CAACC,EAAT,CAAa,CACX,KAAM,IAAIC,CAAAA,KAAJ,CAAU,4CAAV,CAAN,CACD,CACD,MAAOF,CAAAA,GAAG,CAACG,IAAJ,EAAP,CACD,CANH,EAOGJ,IAPH,CAOQ,SAACV,IAAD,CAAU,CACdC,OAAO,CAACD,IAAD,CAAP,CACAG,YAAY,CAAC,KAAD,CAAZ,CACAE,QAAQ,CAAC,IAAD,CAAR,CACD,CAXH,EAYGU,KAZH,CAYS,SAACC,GAAD,CAAS,CACd,GAAIA,GAAG,CAACC,IAAJ,GAAa,YAAjB,CAA+B,CAC7BC,OAAO,CAACd,KAAR,CAAc,eAAd,EACD,CAFD,IAEO,CACLD,YAAY,CAAC,KAAD,CAAZ,CACAE,QAAQ,CAACW,GAAG,CAACG,OAAL,CAAR,CACD,CACF,CAnBH,EAqBA,MAAO,kBAAMb,CAAAA,SAAS,CAACc,KAAV,EAAN,EAAP,CACD,CAzBQ,CAyBN,CAACrB,GAAD,CAzBM,CAAT,CA2BA,MAAO,CAAEC,IAAI,CAAJA,IAAF,CAAQE,SAAS,CAATA,SAAR,CAAmBE,KAAK,CAALA,KAAnB,CAAP,CACD,CAjCD,CAmCA,cAAeN,CAAAA,QAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst useFetch = (url) => {\r\n  const [data, setData] = useState(null);\r\n  const [isPending, setIsPending] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const abortCont = new AbortController();\r\n\r\n    fetch(url, { signal: abortCont.signal })\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw new Error(\"Cound not fetch the data for that resource\");\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        setData(data);\r\n        setIsPending(false);\r\n        setError(null);\r\n      })\r\n      .catch((err) => {\r\n        if (err.name === \"AbortError\") {\r\n          console.error(\"Fetch aborted\");\r\n        } else {\r\n          setIsPending(false);\r\n          setError(err.message);\r\n        }\r\n      });\r\n\r\n    return () => abortCont.abort();\r\n  }, [url]);\r\n\r\n  return { data, isPending, error };\r\n};\r\n\r\nexport default useFetch;\r\n"]},"metadata":{},"sourceType":"module"}